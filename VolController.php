<?php
namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use App\Entity\Vol;
use App\Repository\VolRepository;
use App\Form\VolType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;


class VolController extends AbstractController
{
    /**
     * @Route("/vol", name="app_vol")
     */
    public function index(): Response
    {
        return $this->render('vol/index.html.twig', [
            'controller_name' => 'VolController',
        ]);
    }
     /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
            /**
  * @Route("/newVol", name="newVol")
   
  */

  public function newVol(Request $request )
  {   $vol= new Vol();
      $form =$this->createForm (VolType::class, $vol);
      $form -> add ('Ajouter', SubmitType::Class);
      $form ->handleRequest($request);
      if ($form->isSubmitted()&& $form->isValid()){
          $file = $form->get('image')->getData();

            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();

            // moves the file to the directory where brochures are stored
            $file->move(
                $this->getParameter('brochures_directory'),
                $fileName
            );

            $vol->setImage($fileName);
          $vol= $form->getData();
          $em= $this->getDoctrine()->getManager();
          $em->persist ($vol);
          $em->flush();
          return $this->redirectToRoute('newVol');
      }
      return $this->render('vol/index.html.twig', [
          'form' => $form -> createView (),
      ]);
  }
 
   /**
     * @Route("/AfficheVol", name="AfficheVol")
     */
    public function AfficheVol(){
        $repository=$this->getDoctrine()->getRepository(Vol::class); 
        $vol=$repository->findAll();
        return $this->render('vol/Affiche.html.twig', 
        ['aa'=>$vol]); 
     }
      /**
     * @Route("/AfficheVolFront", name="AfficheVolFront")
     */
    public function AfficheVolFront(){
        $repository=$this->getDoctrine()->getRepository(Vol::class); 
        $vol=$repository->findAll();
        return $this->render('vol/AfficheVolFront.html.twig', 
        ['aa'=>$vol]); 
     }
            /**
         * @Route ("/delete/{id}",name="delete")
         */
    public function delete($id)
    {
        $em=$this->getDoctrine()->getManager();
        $vol= $em ->getRepository (Vol::class)->find ($id);
        $em->remove($vol);
        $em->flush();
         return $this->redirectToRoute('AfficheVol') ;
    }
      /**
     * @Route("/updateVol/{id}", name="updateVol")
     */
    public function updateVol(Request $request, $id)
    {
        $em= $this->getDoctrine()->getManager();
        $vol= $em ->getRepository (Vol::class)->find ($id);
        $form =$this->createForm (VolType::class, $vol);
        $form -> add ('Update/Modifier', SubmitType::Class);
        $form ->handleRequest($request);
        if ($form->isSubmitted()){
            $file = $form->get('image')->getData();
  
              $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
  
              // moves the file to the directory where brochures are stored
              $file->move(
                  $this->getParameter('brochures_directory'),
                  $fileName
              );
  
              $vol->setImage($fileName);
            $vol= $form->getData();
            $em= $this->getDoctrine()->getManager();
            $em->persist ($vol);
            $em->flush();
            return $this->redirectToRoute('AfficheVol');
        }
        return $this->render('vol/Modifier.html.twig', [
            'form_title'=> "modifier un Event",
            'w' => $form -> createView (),
        ]);
    }
        /**
     * @Route("/TrierParPrix", name="TrierParPrix")
     */
    public function TrierParPrix(Request $request): Response
    {
        $repository = $this->getDoctrine()->getRepository(Vol::class);
        $vol = $repository->findByPrix();

        return $this->render('vol/Affiche.html.twig', [
            'aa' =>  $vol,
        ]);
    }
}
